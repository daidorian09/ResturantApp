<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnEditPassword.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>